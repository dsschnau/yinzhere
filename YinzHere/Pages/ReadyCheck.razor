@page "/readycheck/{key?}"
@using YinzHere.Models
@using Services
@inject NavigationManager NavigationManager
@inject IReadyCheckService ReadyCheckService
@inject IJSRuntime JSRuntime
@inject ClipboardService ClipboardService

<h1>Yinz Here?</h1>
@if (Key != null)
{
    <span>Room ID: <strong>@Key</strong></span>
    <button class="btn btn-secondary" @onclick="CopyUrl">Click to copy URL</button>
}
<hr />
@if (Key == null)
{
    <button class="btn btn-primary" @onclick="NewReadyCheck">Ready-Check</button>
}
else
{
    <input type="text" placeholder="Enter your name here" @bind="nameToAdd" />
    <button class="btn btn-primary" @onclick="AddName">Add your name</button>

    <h4>Users Ready:</h4>
    <ul>
        @foreach (var user in CurrentReadyCheck.UsersReady)
        {
            <li>@user</li>
        }
    </ul>

}

@code {
    [ParameterAttribute]
    public string Key { get; set; }
    private string nameToAdd { get; set; }
    private Models.ReadyCheck CurrentReadyCheck { get; set; }

    public void Dispose()
    {
        if (this.CurrentReadyCheck == null)
        {
            this.CurrentReadyCheck.OnChange -= StateHasChanged;
        }
    }
    protected override async Task OnParametersSetAsync()
    {
        base.OnParametersSet();
        this.CurrentReadyCheck = ReadyCheckService.GetReadyCheck(this.Key);
        if (CurrentReadyCheck == null)
        {
            if (!string.IsNullOrWhiteSpace(this.Key))
            {
                this.Key = null;
                NavigationManager.NavigateTo("/", true);
            }
        }
        else
        {
            this.CurrentReadyCheck.OnChange += StateHasChangedAsync;
        }
    }
    private void StateHasChangedAsync()
    {
        InvokeAsync(StateHasChanged);
    }
    private void AddName()
    {
        this.CurrentReadyCheck.AddUser(nameToAdd);
        this.nameToAdd = null;
    }
    private void NewReadyCheck()
    {
        var key = ReadyCheckService.NewReadyCheck();
        NavigationManager.NavigateTo($"/readycheck/{key}");
    }
    private void CopyUrl()
    {
        ClipboardService.WriteTextAsync(NavigationManager.Uri);
    }
}
